# üöÄ Instalar depend√™ncias
# !pip install tensorflow tensorflow-hub librosa matplotlib openai-whisper ffmpeg-python -q

# üì• Importar pacotes
import tensorflow as tf
import tensorflow_hub as hub
import numpy as np
import librosa
import matplotlib.pyplot as plt
import whisper
import csv
import os

os.environ["TF_ENABLE_ONEDNN_OPTS"] = "0"

# üîä Carregar YAMNet
yamnet_model = hub.load("https://tfhub.dev/google/yamnet/1")

# üìÑ Baixar labels
# labels_url = "https://raw.githubusercontent.com/tensorflow/models/master/research/audioset/yamnet/yamnet_class_map.csv"
# label_path = tf.keras.utils.get_file("yamnet_class_map.csv", labels_url)

# Carregar labels
# with open(label_path) as f:
#     reader = csv.reader(f)
#     next(reader)
#     for row in reader:
#         print(row)
#     class_names = [row[2] for row in reader]

traducao = ['Fala', 'Fala infantil, crian√ßa falando', 'Conversa', 'Narra√ß√£o, mon√≥logo', 'Balbucio', 'Sintetizador de fala', 'Grito', 'Berro', 'Grito forte', 'Gritar', 'Crian√ßas gritando', 'Gritando', 'Sussurro', 'Riso', 'Riso de beb√™', 'Risada', 'Riso contido', 'Riso alto', 'Risada abafada', 'Choro, solu√ßo', 'Choro de beb√™, choro infantil', 'Choramingar', 'Lamentar, gemer', 'Suspiro', 'Canto', 'Coral', 'Yodel', 'C√¢ntico', 'Mantra', 'Crian√ßa cantando', 'Canto sint√©tico', 'Rap', 'Cantarolar', 'Gemido', 'Grunhido', 'Assobio', 'Respira√ß√£o', 'Chiado', 'Ronco', 'Ofegar', 'Ofegar (arfar)', 'Resmungo', 'Limpar a garganta', 'Espirro', 'Cheirar', 'Correr', 'Arrastar os p√©s', 'Andar, passos', 'Mastigar', 'Morder', 'Gargarejo', 'Barulho do est√¥mago', 'Arrotar', 'Soltar pum', 'M√£os', 'Estalar os dedos', 'Palmas', 'Sons do cora√ß√£o, batimento card√≠aco', 'Sopro card√≠aco', 'Torcer', 'Aplausos', 'Tagarelice', 'Multid√£o', 'Barulho confuso, barulho de fala', 'Crian√ßas brincando', 'Animal', 'Animais dom√©sticos, pets', 'Cachorro', 'Latido', 'Latido agudo', 'Uivo', 'Au-au', 'Rosnado', 'Chilrear (cachorro)', 'Gato', 'Ronronar', 'Miar', 'Chiado', 'Grito estridente', 'Animais de fazenda, animais de trabalho', 'Cavalo', 'Trote', 'Relincho', 'Gado', 'Mugido', 'Sino de vaca', 'Porco', 'Grunhido', 'Bode', 'Balido', 'Ovelha', 'Aves', 'Galinha, galo', 'Cocoric√≥', 'Canto do galo', 'Peru', 'Gluglutar', 'Pato', 'Quack', 'Ganso', 'Grunhido', 'Animais selvagens', 'Gatos rugindo (le√µes, tigres)', 'Rugido', 'P√°ssaro', 'Vocaliza√ß√£o de p√°ssaro, chamada de p√°ssaro, canto de p√°ssaro', 'Piar', 'Grito agudo', 'Pombo, rola', 'Coo', 'Corvo', 'Graxnado', 'Coruja', 'Gurro', 'Voo de p√°ssaro, batidas das asas', 'Can√≠deos, c√£es, lobos', 'Roedores, ratos, camundongos', 'Camundongo', 'Patar', 'Inseto', 'Grilo', 'Mosquito', 'Mosca', 'Zumbido', 'Abelha, vespa, etc.', 'Sapo', 'Coaxar', 'Cobra', 'Chocalho', 'Vocaliza√ß√£o de baleia', 'M√∫sica', 'Instrumento musical', 'Instrumento de cordas dedilhadas', 'Guitarra', 'Guitarra el√©trica', 'Baixo', 'Guitarra ac√∫stica', 'Guitarra steel, guitarra slide', 'T√©cnica de dedilhado (guitarra)', 'Dedilhar', 'Banjo', 'Sitar', 'Bandolim', 'Z√≠tero', 'Ukulele', 'Teclado (musical)', 'Piano', 'Piano el√©trico', '√ìrg√£o', '√ìrg√£o eletr√¥nico', '√ìrg√£o Hammond', 'Sintetizador', 'Sampler', 'Cravo', 'Percuss√£o', 'Bateria', 'Bateria eletr√¥nica', 'Tambor', 'Caixa', 'Rimshot', 'Rolar tambor', 'Bombo', 'T√≠mpanos', 'Tabla', 'Prato', 'Hi-hat', 'Bloco de madeira', 'Tamborim', 'Chocalho (instrumento)', 'Maraca', 'Gongo', 'Sinos tubulares', 'Percuss√£o com malhete', 'Marimba, xilofone', 'Glockenspiel', 'Vibrafone', 'Steelpan', 'Orquestra', 'Instrumento de metal', 'Trompa', 'Trompete', 'Trombone', 'Instrumento de cordas com arco', 'Se√ß√£o de cordas', 'Violino, fiddle', 'Pizzicato', 'Violoncelo', 'Contrabaixo', 'Instrumento de sopro, madeiras', 'Flauta', 'Saxofone', 'Clarinete', 'Harpa', 'Sino', 'Sino de igreja', 'Sino de guizo', 'Sino de bicicleta', 'Diapas√£o', 'Sino musical', 'Carrilh√£o e sinos', 'Harm√¥nica', 'Acorde√£o', 'Gaita de foles', 'Didgeridoo', 'Shofar', 'Theremin', 'Tigela cantadora', 'Raspar (t√©cnica de performance)', 'M√∫sica pop', 'Hip hop', 'Beatboxing', 'Rock', 'Heavy metal', 'Punk rock', 'Grunge', 'Rock progressivo', 'Rock and roll', 'Rock psicod√©lico', 'Ritmo e blues', 'Soul', 'Reggae', 'Country', 'Swing', 'Bluegrass', 'Funk', 'Folk', 'M√∫sica do Oriente M√©dio', 'Jazz', 'Disco', 'M√∫sica cl√°ssica', '√ìpera', 'M√∫sica eletr√¥nica', 'House', 'Techno', 'Dubstep', 'Drum and bass', 'Eletr√¥nica', 'M√∫sica eletr√¥nica de dan√ßa', 'M√∫sica ambiente', 'Trance', 'M√∫sica da Am√©rica Latina', 'Salsa', 'Flamenco', 'Blues', 'M√∫sica infantil', 'New-age', 'M√∫sica vocal', 'A capella', 'M√∫sica da √Åfrica', 'Afrobeat', 'M√∫sica crist√£', 'Gospel', 'M√∫sica da √Åsia', 'Carnatic', 'M√∫sica de Bollywood', 'Ska', 'M√∫sica tradicional', 'M√∫sica independente', 'Can√ß√£o', 'M√∫sica de fundo', 'Tema musical', 'Jingle', 'Trilha sonora', 'Can√ß√£o de ninar', 'M√∫sica de videogame', 'M√∫sica de Natal', 'M√∫sica de dan√ßa', 'M√∫sica de casamento', 'M√∫sica alegre', 'M√∫sica triste', 'M√∫sica suave', 'M√∫sica animada', 'M√∫sica zangada', 'M√∫sica assustadora', 'Vento', 'Folhas farfalhando', 'Ru√≠do de vento (microfone)', 'Tempestade', 'Trov√£o', '√Ågua', 'Chuva', 'Gota de chuva', 'Chuva na superf√≠cie', 'C√≥rrego', 'Cachoeira', 'Oceano', 'Ondas, surf', 'Vapor', 'Borbulhar', 'Fogo', 'Crepitar', 'Ve√≠culo', 'Barco, ve√≠culo aqu√°tico', 'Veleiro', 'Canoa, caiaque, bote', 'Lancha, barco a motor', 'Navio', 'Ve√≠culo motorizado (estrada)', 'Carro', 'Buzina de carro', 'Buzinar', 'Alarme de carro', 'Vidros el√©tricos', 'Derrapagem', 'Chilrear de pneus', 'Carro passando', 'Carro de corrida', 'Caminh√£o', 'Freio a ar', 'Buzina de caminh√£o', 'Bips de r√©', 'Carrinho de sorvete', '√înibus', 'Ve√≠culo de emerg√™ncia', 'Carro de pol√≠cia (sirene)', 'Ambul√¢ncia (sirene)', 'Caminh√£o de bombeiros (sirene)', 'Moto', 'Ru√≠do de tr√¢nsito', 'Transporte ferrovi√°rio', 'Trem', 'Apito de trem', 'Buzina de trem', 'Vag√£o de trem', 'Rangido de rodas de trem', 'Metr√¥', 'Aeronave', 'Motor de avi√£o', 'Motor a jato', 'H√©lice', 'Helic√≥ptero', 'Avi√£o', 'Bicicleta', 'Skate', 'Motor', 'Motor leve (alta frequ√™ncia)', 'Broca dent√°ria', 'Cortador de grama', 'Motosserra', 'Motor m√©dio (frequ√™ncia m√©dia)', 'Motor pesado (baixa frequ√™ncia)', 'Batida do motor', 'Motor ligando', 'Motor em marcha lenta', 'Acelerando, rugindo', 'Porta', 'Campainha', 'Ding-dong', 'Porta deslizante', 'Bater porta', 'Batida', 'Toque', 'Rangeido', 'Arm√°rio abrindo ou fechando', 'Gaveta abrindo ou fechando', 'Lou√ßa, panelas', 'Talheres', 'Cortar (comida)', 'Fritar (comida)', 'Micro-ondas', 'Liquidificador', 'Torneira', 'Pia (enchendo ou lavando)', 'Banheira (enchendo ou lavando)', 'Secador de cabelo', 'Descarga', 'Escova de dentes', 'Escova de dentes el√©trica', 'Aspirador de p√≥', 'Z√≠per (roupas)', 'Chaves tilintando', 'Moeda caindo', 'Tesoura', 'Barbeador el√©trico', 'Embaralhar cartas', 'Digitar', 'M√°quina de escrever', 'Teclado de computador', 'Escrever', 'Alarme', 'Telefone', 'Telefone tocando', 'Toque do telefone', 'Discagem do telefone', 'Tom de discagem', 'Sinal de ocupado', 'Despertador', 'Sirene', 'Sirene civil', 'Buzina', 'Detector de fuma√ßa', 'Alarme de inc√™ndio', 'Buzina de nevoeiro', 'Apito', 'Apito a vapor', 'Mecanismos', 'Catraca', 'Rel√≥gio', 'Tique-taque', 'Engrenagens', 'Polias', 'M√°quina de costura', 'Ventilador mec√¢nico', 'Ar-condicionado', 'Caixa registradora', 'Impressora', 'C√¢mera', 'C√¢mera reflex', 'Ferramentas', 'Martelo', 'Marreta', 'Serrar', 'Lixar', 'Lixar com lima', 'Ferramenta el√©trica', 'Furadeira', 'Explos√£o', 'Tiro', 'Metralhadora', 'Rajada', 'Fogo de artilharia', 'Arma de brinquedo', 'Fogos de artif√≠cio', 'Estouro', 'Erup√ß√£o', 'Bum', 'Madeira', 'Cortar', 'Lasca', 'Estalo', 'Vidro', 'Barulho de vidro', 'Estilha√ßar', 'L√≠quido', 'Borrifar', 'Agitar', 'Chacoalhar', 'Pingando', 'Derramando', 'Gotejando', 'Jorrar', 'Encher (com l√≠quido)', 'Borrifar', 'Bombear (l√≠quido)', 'Mexer', 'Fervendo', 'Sonar', 'Flecha', 'Whoosh', 'Batida', 'Tombar', 'Afinador eletr√¥nico', 'Unidade de efeitos', 'Efeito coro', 'Quicar bola de basquete', 'Bang', 'Tapa', 'Bater forte', 'Esmagar', 'Quebrar', 'Quicar', 'Chicote', 'Bater asas', 'Arranhar', 'Raspar', 'Esfregar', 'Rolagem', 'Esmagar', 'Amassar', 'Rasgar', 'Bip', 'Ping', 'Ding', 'Estrondo', 'Grito', 'Gritar', 'Rangeido', 'Farfalhar', 'Zumbido', 'Barulho de metal', 'Sibilo', 'Clicar', 'Barulho de carrinho', 'Rugido', 'Plop', 'Sino', 'Zumbido', 'Zing', 'Boing', 'Mastigar', 'Sil√™ncio', 'Onda senoidal', 'Harm√¥nico', 'Tom de pio', 'Efeito sonoro', 'Pulso', 'Interior, sala pequena', 'Interior, sal√£o grande', 'Interior, espa√ßo p√∫blico', 'Exterior, urbano ou artificial', 'Exterior, rural ou natural', 'Reverbera√ß√£o', 'Eco', 'Ru√≠do', 'Ru√≠do ambiental', 'Zumbido da rede el√©trica', 'Distor√ß√£o', 'Sidetone', 'Cacofonia', 'Ru√≠do branco', 'Ru√≠do rosa', 'Pulsa√ß√£o', 'Vibra√ß√£o', 'Televis√£o', 'R√°dio', 'Grava√ß√£o de campo']

# üéß Upload de √°udio
# uploaded = files.upload()
# filename = list(uploaded.keys())[0]

filename = "audios/audio.ogg"


# üéôÔ∏è Processar o √°udio
waveform, sr = librosa.load(filename, sr=16000)
scores, embeddings, spectrogram = yamnet_model(waveform)

# üìä Resultado
mean_scores = tf.reduce_mean(scores, axis=0)
top_class = tf.argmax(mean_scores)
top_score = mean_scores[top_class].numpy()
top_label = traducao[top_class]



print(f"\nüîç Detec√ß√£o: {top_label}")
print(f"üìà Confian√ßa: {top_score:.2f}")
# üìâ Exibir gr√°fico
# plt.figure(figsize=(10, 4))
# plt.plot(waveform)
# plt.title(f"√Åudio: {filename}")
# plt.xlabel("Amostras")
# plt.ylabel("Amplitude")
# plt.show()

# üß† Verificar se √© voz/fala/canto e transcrever
speech_related = ['Fala', 'Fala infantil, crian√ßa falando', 'Conversa', 'Narrrativa, mon√≥logo', 'Balbucio', 'Sintetizador de fala', 'Tagare lice', 'Barulho confuso, fala indistinta', 'Canto', 'Crian√ßa cantando', 'Canto sint√©tico', 'Rap', 'Sussurro']

if top_label in speech_related:
    print("\nüó£Ô∏è Detec√ß√£o √© de fala/canto, iniciando transcri√ß√£o com Whisper...")

    # model = whisper.load_model(
    #     "base"
    # )  # voc√™ pode trocar por 'small' ou 'tiny' para ser mais r√°pido
    # result = model.transcribe(filename, language="pt")

    # print("\nüìù Texto detectado:")
    # print(result["text"])
else:
    print("\nüîá √Åudio n√£o classificado como fala, n√£o ser√° transcrito.")
